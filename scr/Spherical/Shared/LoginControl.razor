@page "/LoginControl"
@inject NavigationManager NavigationManager
@using System.Web;



<div class="login-box">
    <img src="_content/Creative/img/spherical.logo.png" height="90" width="120" />
    <h1>Iniciar sesión</h1>
    <form onsubmit="@Ingresar">
        <label for="company">Empresa:</label>
        <select id="company" required @bind="Empresa">
            <option value="">-- Seleccionar --</option>
            <option value="AYZCORP">AYZCORP</option>
        </select>
        <label for="username">Usuario:</label>
        <input @ref="EntradaUsuario" type="text" id="username" placeholder="Usuario" @bind-value="Usuario" required />
        <label for="password">Contraseña:</label>
        <input type="password" id="password"  placeholder="Contraseña" @bind-value="Clave" onclick="Ingresar" required />
        <button type="submit">Ingresar</button>
    </form>
</div>

@code {

    [Parameter]
    [SupplyParameterFromQuery(Name = "retornoUrl")]
    public string RetornoUrl { get; set; } = string.Empty;

    string Usuario = "";
    string Clave = "";
    string Empresa = "";

    private ElementReference EntradaUsuario;

    [Inject] private IDialogService DialogService { get; set; }

    string state = "Message box hasn't been opened yet";

    private string encode(string param)
    {
        return HttpUtility.UrlEncode(param);
    }

    /// <summary>
    /// Método que controla el evento Initialized Async(inicio asicrono) de la pantalla
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        try
        {
            
        }
        catch (Exception ex)
        {
            
        }
    }


    private void Ingresar()
    {
        NavigationManager.NavigateTo($"/Login?empresa={encode(Empresa)}&usuario={encode(Usuario)}&clave={encode(Clave)}&retornoUrl={encode(@RetornoUrl)}", forceLoad: true);
    }

    protected override async Task OnAfterRenderAsync(bool first)
    {
        if (first)
        {
            await EntradaUsuario.FocusAsync();
        }
    }
}