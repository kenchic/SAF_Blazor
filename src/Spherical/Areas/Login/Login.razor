@page "/login"

@using Microsoft.Extensions.Options
@using Spherical.Client.DTO.Defender
@using Spherical.Client
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using System.Security.Claims
@using Spherical.Authentication
@using Spherical.Core.Creative
@using Spherical.Core.Creative.Models
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject IOptions<AppSettings> AppSettings

<MudContainer MaxWidth="MaxWidth.Medium" Class="d-flex justify-center align-center min-height-100">
    <MudCard Class="pa-4" Style="width: 400px; text-align: center;">
        <MudCardHeader>
            <MudText Typo="Typo.h5">Ingresar a Spherical</MudText>
        </MudCardHeader>
        <MudCardContent>
            <EditForm FormName="FormLogin" OnValidSubmit="OnValidSubmit" Model="UserCredential">
                <DataAnnotationsValidator />

                <MudSelect Label="Empresa"
                           AnchorOrigin="Origin.BottomCenter"
                           Variant="Variant.Outlined"
                           @bind-Value="UserCredential.Empresa">
                    <MudSelectItem Value="@("AYZCORP")" />
                </MudSelect>
                <ValidationMessage For="@(() => UserCredential.Empresa)" />

                <MudTextField Label="Usuario"
                              Variant="Variant.Outlined"
                              FullWidth="true"
                              @bind-Value="UserCredential.Usuario" />
                <ValidationMessage For="@(() => UserCredential.Usuario)" />
                <MudTextField Label="Contraseña"
                              Class="mt-3"
                              Variant="Variant.Outlined"
                              FullWidth="true"
                              InputType="InputType.Password"
                              @bind-Value="UserCredential.Clave" />
                <ValidationMessage For="@(() => UserCredential.Clave)" />

                @if (IsLoading)
                {
                    <MudProgressCircular Class="my-4" Color="Color.Primary" Size="Size.Medium" Indeterminate="true" />
                    <MudText Typo="Typo.subtitle2">Ingresando....</MudText>
                }
                else
                {
                    <MudButton Variant="Variant.Filled"
                               Color="Color.Primary"
                               Class="mt-2"
                               FullWidth="true"
                               ButtonType="ButtonType.Submit">
                        Ingresar
                    </MudButton>
                }
            </EditForm>
        </MudCardContent>
    </MudCard>
</MudContainer>

@code {
    private bool IsLoading = false;

    private CustomAuthStateProvider CustomAuthProvider => (CustomAuthStateProvider)AuthStateProvider;

    private LoginDTO UserCredential = new LoginDTO
        {
            Empresa = "AYZCORP" // Valor por defecto
        };

    private async Task OnValidSubmit()
    {
        try
        {
            IsLoading = true;
            string token = await new SecurityService(AppSettings.Value.ApiUrl).LoginAsync(UserCredential);
            await CustomAuthProvider!.SetToken(token);
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            Log.Error($"Error al autenticar: {ex.Message}", "Login.razor - OnValidSubmit");
            throw;
        }
    }
}