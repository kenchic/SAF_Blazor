@page "/login"

@using Creative.DTO.Defender
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using System.Security.Claims
@using Spherical.Authentication

<h3>Login</h3>

<EditForm FormName="ClickLogin" OnValidSubmit="OnValidSubmit" Model="UserCredentials">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="12">
            <MudCard>
                <MudCardContent>
                    <MudSelect T="string" Label="Empresa" AnchorOrigin="Origin.BottomCenter" @bind-Value="UserCredentials.Empresa" For="@(() => UserCredentials.Empresa)">
                        <MudSelectItem Value="@("")" />
                        <MudSelectItem Value="@("AYZCORP")" />
                    </MudSelect>
                    <MudTextField Label="Usuario" HelperText="Nombre de usuario"
                                  @bind-Value="UserCredentials.Usuario" For="@(() => UserCredentials.Usuario)" />
                    <MudTextField Label="Contraseña" Class="mt-3" HelperText="Contraseña de usuario"
                                  @bind-Value="UserCredentials.Clave" For="@(() => UserCredentials.Clave)" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Ingresar</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {

    [Inject]
    private AuthenticationStateProvider? AuthenticationStateProvider { get; set; }

    [Inject]
    private NavigationManager NavManager { get; set; }

    [SupplyParameterFromForm]
    public AutenticacionDTO UserCredentials { get; set; } = new AutenticacionDTO();

    private async Task OnValidSubmit()
    {
        var usuario = new UsuarioDTO{
                Usuario = UserCredentials.Usuario
            };
        await ((CustomAuthenticationStateProvider)AuthenticationStateProvider!).UpdateAuthenticationState(UserCredentials);

        NavManager.NavigateTo("/", true);
    }
}